/* Simple +/-/* expression language; parser evaluates constant expressions on the fly*/
import java_cup.runtime.*;

parser code {:
    // Connect this parser to a scanner!
    protected scanner s;
    public parser(scanner s){ this.s=s; }
:}

// define how to connect to the scanner!
init with {: 
	// s.init(); 
:};

scan with {: 
	return s.next_token(); 
:};

// Terminals (tokens returned by the scanner). 
terminal            PLUS, MINUS, TIMES, DIV, LPAREN, RPAREN;
terminal Integer    NUMBER;        // our scanner provides numbers as integers

// Non terminals 
non terminal Integer    expr;      // used to store evaluated subexpressions

// Precedences 
precedence left PLUS, MINUS;
precedence left TIMES;
precedence left DIV;

// The grammar rules
expr ::= expr:e1 PLUS expr:e2      {: System.out.println(e1+"+"+e2);RESULT = e1+e2;       :}
	| expr:e1 MINUS expr:e2        {: System.out.println(e1+"-"+e2);RESULT = e1-e2;       :}
	| expr:e1 TIMES expr:e2        {: System.out.println(e1+"*"+e2);RESULT = e1*e2;       :}
	| MINUS expr:e                 {: System.out.println("-"+e);RESULT = -e;          :}  	     
	| LPAREN expr:e RPAREN	       {: System.out.println("("+e+")");RESULT = e;           :}
	| NUMBER:n	                   {: System.out.println(n); RESULT = n;           :}
;